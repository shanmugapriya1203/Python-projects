import pygame
import sys

# Initialize pygame
pygame.init()

# Constants
WIDTH, HEIGHT = 600, 600
GRID_SIZE = 20
FPS = 10
YELLOW = (255, 255, 0)
BLACK = (0, 0, 0)
BLUE = (0, 0, 255)
WHITE = (255, 255, 255)
RED = (255, 0, 0)

# Set up the screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Mini Pac-Man")
clock = pygame.time.Clock()

# Font setup
font = pygame.font.SysFont('Arial', 36)
small_font = pygame.font.SysFont('Arial', 24)


# Pac-Man class
class PacMan:
    def __init__(self):
        self.x = GRID_SIZE
        self.y = GRID_SIZE
        self.speed = GRID_SIZE
        self.dx = 0
        self.dy = 0

    def move(self):
        self.x += self.dx
        self.y += self.dy

    def draw(self):
        pygame.draw.circle(screen, YELLOW, (self.x + GRID_SIZE // 2, self.y + GRID_SIZE // 2), GRID_SIZE // 2)


# Create dots
def create_dots():
    dots = []
    for i in range(3, 28, 4):
        for j in range(3, 28, 4):
            dots.append(pygame.Rect(i * GRID_SIZE, j * GRID_SIZE, 6, 6))
    return dots


# Draw game over screen
def draw_game_over(score):
    screen.fill(BLACK)

    # Game Over text
    game_over_text = font.render('GAME OVER!', True, RED)
    game_over_rect = game_over_text.get_rect(center=(WIDTH // 2, HEIGHT // 2 - 50))
    screen.blit(game_over_text, game_over_rect)

    # Score text
    score_text = font.render(f'Final Score: {score}', True, WHITE)
    score_rect = score_text.get_rect(center=(WIDTH // 2, HEIGHT // 2))
    screen.blit(score_text, score_rect)

    # Restart instruction
    restart_text = small_font.render('Press SPACE to play again', True, WHITE)
    restart_rect = restart_text.get_rect(center=(WIDTH // 2, HEIGHT // 2 + 50))
    screen.blit(restart_text, restart_rect)

    # Quit instruction
    quit_text = small_font.render('Press ESC to quit', True, WHITE)
    quit_rect = quit_text.get_rect(center=(WIDTH // 2, HEIGHT // 2 + 80))
    screen.blit(quit_text, quit_rect)


# Main game loop
def game_loop():
    pacman = PacMan()
    dots = create_dots()
    score = 0
    game_over = False

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

            if game_over:
                # Handle game over state inputs
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_SPACE:
                        # Restart the game
                        pacman = PacMan()
                        dots = create_dots()
                        score = 0
                        game_over = False
                    elif event.key == pygame.K_ESCAPE:
                        pygame.quit()
                        sys.exit()
            else:
                # Handle movement in active game
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_LEFT:
                        pacman.dx = -pacman.speed
                        pacman.dy = 0
                    elif event.key == pygame.K_RIGHT:
                        pacman.dx = pacman.speed
                        pacman.dy = 0
                    elif event.key == pygame.K_UP:
                        pacman.dy = -pacman.speed
                        pacman.dx = 0
                    elif event.key == pygame.K_DOWN:
                        pacman.dy = pacman.speed
                        pacman.dx = 0

        if game_over:
            # Display game over screen
            draw_game_over(score)
        else:
            # Normal game logic
            screen.fill(BLACK)

            pacman.move()
            # Keep Pac-Man in bounds
            pacman.x %= WIDTH
            pacman.y %= HEIGHT

            # Draw Pac-Man
            pacman.draw()

            # Draw and check dots
            for dot in dots[:]:
                if pygame.Rect(pacman.x, pacman.y, GRID_SIZE, GRID_SIZE).colliderect(dot):
                    dots.remove(dot)
                    score += 10
                else:
                    pygame.draw.rect(screen, WHITE, dot)

            # Check if all dots are collected
            if len(dots) == 0:
                game_over = True

            # Draw score
            score_text = small_font.render(f'Score: {score}', True, WHITE)
            screen.blit(score_text, (10, 10))

            # Draw grid (optional)
            for x in range(0, WIDTH, GRID_SIZE):
                pygame.draw.line(screen, BLUE, (x, 0), (x, HEIGHT))
            for y in range(0, HEIGHT, GRID_SIZE):
                pygame.draw.line(screen, BLUE, (0, y), (WIDTH, y))

        pygame.display.flip()
        clock.tick(FPS)


# Start the game
game_loop()
